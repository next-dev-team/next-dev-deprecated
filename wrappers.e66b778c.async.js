(self["webpackChunk_next_dev_docs"]=self["webpackChunk_next_dev_docs"]||[]).push([[275],{89146:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return z}});var o=t(11677),r=t(414),i=t(94569),a=t(94532),l=t(22991),s=t(61383),d=t(66820),u=t(11071),m=t(91991),c=t(24190),p=t(759),g=t(53401),h=t(85139),f=t(95384),v=t(20060),y=t(96832),x=t(72334),b=t(76713),w=t(41738),S=t(19295),k=t(83894),C=t(30833)["default"];const P={appState:{toolboxContent:{content:"",title:"",width:C.layout.xlWidth}}},_=(0,w.NY)()({name:"appStore",state:{...P},reducers:{setAppState:(e,n)=>({...e,appState:{...e.appState,...n,toolboxContent:{...e.appState.toolboxContent,...n.toolboxContent}}}),toggleToolbox:e=>({...e,appState:{...e.appState,toolBox:!e.appState.toolBox}})}}),I={appStore:_},T=(0,w.S1)({models:I,plugins:[(0,k.Z)(),(0,S.Z)({whitelist:[""]})]});var B=t(97841),F=t(53465),D=t.n(F),A=t(23458),N=t.n(A),j=t(20476);function R(e=!1){const n=j||{},t=n.enable,o=n.disable,i=n.exportGeneratedCSS,a=n.setFetchMethod,l=(0,y.useState)(e),s=(0,r.Z)(l,2),d=s[0],u=s[1],m={brightness:100,contrast:90,sepia:10},c={invert:[],css:"",ignoreInlineStyle:[".react-switch-handle"],ignoreImageAnalysis:[],disableStyleSheetsProxy:!0};(0,y.useEffect)((()=>{if("undefined"!==typeof window&&"undefined"!==typeof window.matchMedia)return j?(a(fetch),d?t(m,c):o(),()=>{o()}):()=>null}),[d]);const p=(0,y.useMemo)((()=>{const e=()=>u((e=>!e));return{toggle:e,collectCSS:i}}),[d]);return[d,p]}var M=t(30833)["default"];const O=M;var q=t(58138),E=t(52661)["default"];const U=()=>{const e=(0,y.useMemo)((()=>{var e;return(0,f.isBrowser)()?(null===(e=matchMedia)||void 0===e?void 0:e("(prefers-color-scheme: dark)").matches)&&"dark":"light"}),[]),n=(0,y.useMemo)((()=>(0,f.isBrowser)()?localStorage.getItem("procomponents_dark_theme")||e:"light"),[]),t=e=>{try{const n=document.getElementsByTagName("meta")["theme-color"];n.setAttribute("content",e?"#242525":"#1890ff")}catch(n){}},o=R("dark"===n),a=(0,r.Z)(o,2),l=a[0],s=a[1].toggle;return(0,y.useEffect)((()=>{t(l)}),[l]),(0,f.isBrowser)()?(0,q.jsx)(i.Z,{checkedChildren:"\ud83c\udf1c",unCheckedChildren:"\ud83c\udf1e",defaultChecked:"dark"===n,checked:l,onChange:e=>{s(),e?localStorage.setItem("procomponents_dark_theme","dark"):localStorage.setItem("procomponents_dark_theme","light")}}):null},L=({children:e})=>{const n=E._selAppStoreAppState(),t=n.toggleToolbox,i=n.toolboxContent,p=n.toolBox,g=n.setAppState,f=(0,y.useState)("preview"),v=(0,r.Z)(f,2),b=v[0],w=v[1],S=(e=!1)=>{var n;let t;return"preview"===b?(0,q.jsx)("iframe",{className:"w-full h-[83vh] mt-2 bg-white  rounded-lg lg:transition-all ",loading:"lazy",srcDoc:(0,B.qz)(null===i||void 0===i?void 0:i.content),style:{maxWidth:null===i||void 0===i?void 0:i.width}}):("html"===b&&(t=(0,h.format)((0,x.renderToStaticMarkup)(null===i||void 0===i?void 0:i.content).replace('data-reactroot="">',">"),{plugins:[D(),N()],parser:"babel"})),"react"===b&&(t=null===i||void 0===i?void 0:i.content),e?t:(0,q.jsx)(B.G_,{children:null!==(n=t)&&void 0!==n?n:(0,q.jsx)("div",{children:"coming soon"})}))},k=()=>{var e;const n=null===(e=document.getElementsByClassName("npm__react-simple-code-editor__textarea").item(0))||void 0===e?void 0:e.textContent;navigator.clipboard.writeText(n),a.ZP.success({content:"Copied",icon:(0,q.jsx)(o.Z,{style:{top:-2}})})},C=(null===i||void 0===i?void 0:i.width)<600,P=(null===i||void 0===i?void 0:i.width)<500;return(0,q.jsxs)(q.Fragment,{children:[(0,q.jsx)(l.Z,{visible:p,title:(0,q.jsx)("div",{className:C?"mr-1":"",children:(0,q.jsxs)(s.Z,{size:C?"small":"middle",children:[(0,q.jsx)(d.Z.Text,{strong:!0,className:"capitalize "+(C?"text-sm":"text-base"),children:null===i||void 0===i?void 0:i.title}),(0,q.jsx)("div",{className:"mx-1",children:"-"}),(0,q.jsx)(u.Z,{dropdownMatchSelectWidth:160,className:"min-w-[70px]",value:null===i||void 0===i?void 0:i.width,defaultValue:null===i||void 0===i?void 0:i.width,options:O.layout.responsiveOption.map((e=>({label:`${e.label} - ${"string"===typeof e.value?e.value:`${e.value}px`}`,value:e.value}))),onSelect:e=>{setTimeout((()=>{g({toolboxContent:{width:e}})}),200)}})]})}),placement:"right",onClose:()=>{t(),setTimeout((()=>{w("preview"),g({toolboxContent:{width:O.layout.xlWidth}})}),400)},size:"large",width:null===i||void 0===i?void 0:i.width,extra:(0,q.jsxs)(s.Z,{children:[(0,q.jsx)(m.Z,{size:C?"small":"middle",className:"hover:bg-green-600",shape:"round",onClick:k,disabled:"preview"===b,children:(0,q.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",className:"preview"!==b?"w-5 h-5 text-green-600 hover:text-gray-50":'"w-5 h-5',fill:"none",viewBox:"0 0 24 24",stroke:"currentColor",children:(0,q.jsx)("path",{"stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",d:"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3"})})}),P?(0,q.jsx)(d.Z.Text,{className:"relative bottom-0.5",children:b}):(0,q.jsxs)(c.ZP.Group,{size:C?"small":"middle",value:b,onChange:e=>{w(e.target.value)},children:[(0,q.jsx)(c.ZP.Button,{value:"preview",children:"Preview"}),(0,q.jsx)(c.ZP.Button,{value:"html",children:"Html/Vue"}),(0,q.jsx)(c.ZP.Button,{value:"react",children:"React"})]})]}),children:S()}),e]})},Z=({children:e,...n})=>(0,q.jsx)(b.zt,{store:T,children:(0,q.jsx)(p.ZP,{locale:g.Z,children:(0,q.jsx)(v.Z,{...n,children:(0,q.jsx)(L,{children:(0,q.jsxs)("div",{children:[(0,q.jsx)("div",{children:e},"children"),(0,q.jsx)("div",{style:{position:"fixed",right:8,top:0,zIndex:999,display:"flex",alignItems:"center"},className:"procomponents_dark_theme_view",children:(0,f.isBrowser)()?(0,q.jsx)(U,{}):null},"procomponents_dark_theme_view")]})})})})});var z=Z},73791:function(e,n,t){"use strict";t.r(n);var o=t(58138);n["default"]=({children:e,location:n,...t})=>n.pathname.startsWith("/~demos/layout")?e:(0,o.jsx)("div",{style:{padding:24},children:(0,o.jsx)("div",{style:{padding:24,border:"1px solid #f0f0f0"},children:e})})},51289:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return b}});var o=JSON.parse('{"menus":{"en-US":{"*":[{"path":"/","title":"Next Dev - Super Front-end ecosystems","meta":{"order":10}}],"/antd-components":[{"title":"Display","path":"/antd-components/display/button","meta":{},"children":[{"path":"/antd-components/display/button/button","title":"Authentication","meta":{}}]},{"title":"Form","path":"/antd-components/form/crud","meta":{},"children":[{"path":"/antd-components/form/crud/crud","title":"Form Crud","meta":{}}]},{"path":"/antd-components/getting-started","title":"Getting Started","meta":{}}],"/blog":[{"title":"Introduction","children":[{"path":"/blog/getting-started","title":"Blog"}]}],"/components":[{"title":"Introduction","children":[{"path":"/components/getting-started","title":"Getting Started"}]},{"title":"Display","children":[{"path":"/components/display/button/button","title":"Button"}]},{"title":"Card","children":[{"path":"/components/card/blog/blog","title":"Blog1"}]},{"title":"Navigation","children":[{"path":"/components/navigation/top","title":"Top Navigation"}]},{"title":"Footer","children":[{"path":"/components/footer","title":"Hyper Footer"}]}],"/introduce":[{"title":"Introduce","children":[{"path":"/introduce/introduce","title":"Introduction"},{"path":"/introduce/philosophy","title":"Design ideas"},{"path":"/introduce/contributing","title":"Participate in contribution"}]}],"/utils":[{"title":"Async","children":[{"path":"/utils/async/request","title":"Request"}]},{"title":"Javascript","children":[{"path":"/utils/js/object","title":"Object"}]},{"title":"Security","children":[{"path":"/utils/authority","title":"Authority"},{"path":"/utils/crypto","title":"Crypto"},{"path":"/utils/constant","title":"Constants"},{"path":"/utils/store","title":"Store"}]},{"title":"Validation","children":[{"path":"/utils/validation/regex","title":"Regex"},{"path":"/utils/validation/is","title":"Boolean"}]}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{"en-US":[{"title":"Introduce","path":"/introduce"},{"title":"Blog","path":"/blog"},{"title":"Components","path":"/components"},{"title":"Antd Components","path":"/antd-components"},{"title":"Utils","path":"/utils"},{"title":"Github","path":"https://github.com/next-dev-team/next-dev"},{"title":"Credit","path":"https://github.com/next-dev-team/awesome-tailwind"}]},"title":"Next Dev","mode":"site","repository":{"url":"","branch":"master"},"theme":{},"exportStatic":{}}'),r=t(95384),i='import { Fragment } from \'react\';\nimport { AuthLogin1 } from \'next-dev-antd-ui/src\';\nconst DemoButton = () => {\n  const renderComponent = [\n    {\n      title: \'Primary\',\n      render: (\n        <AuthLogin1\n          onFinish={async (values) => {\n            alert(JSON.stringify(values, null, 2));\n          }}\n          logo="https://github.githubassets.com/images/modules/logos_page/Octocat.png"\n          title="Github"\n          subTitle="World\'s Largest Gay Dating Site"\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div className="flex flex-wrap items-center justify-center gap-4">\n      {(renderComponent as any).map((item, key) => (\n        <Fragment key={key}>\n          {item?.divider && <hr className="w-full border-b border-gray-200" />}\n          {item.render}\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default DemoButton;',a="import { useRef, useState } from 'react';\nimport { FormCrud } from 'next-dev-antd-ui/src';\nimport {\n  _isArray,\n  _omit,\n  _requestAxios,\n  _setConfigAxios,\n} from 'next-dev-utils/src';\nimport {\n  ActionType,\n  BetaSchemaForm,\n  ProColumns,\n} from '@ant-design/pro-components';\nimport { useForm } from 'antd/es/form/Form';\nimport {\n  Button,\n  Card,\n  ConfigProvider,\n  Descriptions,\n  Divider,\n  Dropdown,\n  Menu,\n  notification,\n  Row,\n  Select,\n  Space,\n  Typography,\n} from 'antd';\n\nimport enUSIntl from 'antd/es/locale/en_US';\nimport kmKHIntl from 'antd/es/locale/km_KH';\nimport dayjs from 'dayjs';\nimport { CheckCircleOutlined, EllipsisOutlined } from '@ant-design/icons';\n\ninterface ResData {\n  data: Datum[];\n}\n\ninterface Datum {\n  state: string;\n  id: number;\n  status: string;\n  user_created?: any;\n  date_created: string;\n  user_updated: string;\n  date_updated: string;\n  title: string;\n  photo: string;\n  iframeUr?: any;\n  short_description: string;\n  description: string;\n}\n\ntype Filter = Pagination & Datum;\nconst ASSETS = 'https://dwmniez7.directus.app/assets/';\n\nconst valueEnum = {\n  0: 'close',\n  1: 'running',\n  2: 'online',\n  3: 'error',\n};\n\nconst intlMap = {\n  kmKHIntl,\n  enUSIntl,\n};\n\nexport default function DemoCrud() {\n  const [form] = useForm<Datum>();\n  const actionRef = useRef<ActionType>();\n  const [intl, setIntl] = useState<keyof typeof intlMap>('enUSIntl');\n\n  const columns: Array<\n    React.ComponentProps<typeof BetaSchemaForm<Datum>>['columns'][0] & {\n      dataIndex?: keyof Datum | 'list';\n      customRenderType?: 'tag' | 'formList';\n    } & Omit<ProColumns<Datum>, 'valueType'>\n  > = [\n    {\n      title: 'No',\n      valueType: 'indexBorder',\n      width: '10%',\n    },\n\n    {\n      order: 6,\n      width: '10%',\n      title: 'Name',\n      dataIndex: 'title',\n      tip: 'The title will automatically shrink if it is too long',\n      formItemProps: {\n        rules: [{ required: true }],\n      },\n      hideInSearch: false,\n      copyable: true,\n    },\n    {\n      order: 2,\n      width: '10%',\n      title: 'Photo',\n      dataIndex: 'photo',\n      valueType: { type: 'image', width: 70 },\n      formItemProps: {\n        rules: [{ required: true }],\n        name: 'photo',\n      },\n    },\n    {\n      order: 2,\n      width: '10%',\n      title: 'Photo',\n      dataIndex: 'photo1',\n      valueType: { type: 'image', width: 70 },\n      formItemProps: {\n        rules: [{ required: true }],\n        name: 'photo1',\n      },\n    },\n    {\n      order: 4,\n      width: '30%',\n      title: 'Short Description',\n      dataIndex: 'short_description',\n      valueType: 'textarea',\n      ellipsis: true,\n    },\n    {\n      order: 3,\n      width: '20%',\n      title: 'Modified date',\n      dataIndex: 'date_updated',\n      valueType: 'date',\n    },\n    {\n      order: 5,\n      width: '10%',\n      title: 'state',\n      dataIndex: 'state',\n      initialValue: 'all',\n      filters: true,\n      onFilter: true,\n      valueEnum: {\n        all: { text: 'All', status: 'Default' },\n        close: { text: 'close', status: 'Default' },\n        running: { text: 'running', status: 'Processing' },\n        online: { text: 'Online', status: 'Success' },\n        error: { text: 'Exception', status: 'Error' },\n      },\n    },\n    {\n      width: '10%',\n      title: 'List',\n      align: 'center',\n      valueType: 'formList',\n      dataIndex: 'list',\n      ellipsis: true,\n\n      initialValue: [{ state: 'all', title: 'title' }],\n      columns: [\n        {\n          valueType: 'group',\n          colProps: { span: 24 },\n          columns: [\n            {\n              title: 'status',\n              dataIndex: 'state',\n              valueType: 'select',\n              valueEnum,\n            },\n            {\n              title: 'title',\n              dataIndex: 'title',\n              formItemProps: {\n                rules: [\n                  {\n                    required: true,\n                    message: 'This item is required',\n                  },\n                ],\n              },\n            },\n          ],\n        },\n        {\n          valueType: 'dateTime',\n          initialValue: new Date(),\n          dataIndex: 'currentTime',\n        },\n      ],\n    },\n    {\n      order: 1,\n      width: '10%',\n      title: 'Status',\n      hideInSearch: false,\n      dataIndex: 'status',\n      valueType: 'select',\n      customRenderType: 'tag',\n      formItemProps: {\n        rules: [{ required: true }],\n      },\n      sorter: true,\n      fieldProps: {\n        options: [\n          {\n            value: 'published',\n            label: 'Published',\n          },\n          {\n            value: 'draft',\n            label: 'Draft',\n          },\n        ],\n      },\n    },\n  ];\n\n  return (\n    <ConfigProvider locale={intlMap[intl]}>\n      <FormCrud<Datum, Filter>\n        // manage form, setFieldsValue, resetFields ....\n        form={form}\n        // actionRef manage reload or refetch data, filter....\n        actionRef={actionRef}\n        // manage all column and render form, filter...\n        columns={columns as any}\n        options={{\n          search: true,\n        }}\n        headerTitle={\n          <Space>\n            <span>Advance Table</span>\n            <Select<keyof typeof intlMap>\n              defaultActiveFirstOption\n              bordered={false}\n              value={intl}\n              onChange={(value) => {\n                dayjs.locale(intlMap[value].locale);\n                setIntl(value);\n              }}\n              options={Object.keys(intlMap).map((value) => ({\n                value,\n                label: value,\n              }))}\n            />\n          </Space>\n        }\n        tableExtraRender={(_, data) => (\n          <Card>\n            <Descriptions size=\"small\" column={3}>\n              <Descriptions.Item label=\"Row\">{data.length}</Descriptions.Item>\n              <Descriptions.Item label=\"Created\">Lili Qu</Descriptions.Item>\n              <Descriptions.Item label=\"Association\">\n                <a>421421</a>\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Creation Time\">\n                2017-01-10\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Effective Time\">\n                2017-10-10\n              </Descriptions.Item>\n            </Descriptions>\n          </Card>\n        )}\n        // custom config, params, to _axios request\n        requestConfig={(returnVal) => {\n          const value = returnVal as unknown as ResData & typeof returnVal;\n          console.log('requestConfig', value);\n\n          const idField = value?.id || value?.record?.id;\n\n          return {\n            // common\n            headers: {\n              Authorization: 'Bearer D5UspbnsDoF-PMLpPSESE072T6vky2DJ',\n            },\n            baseURL: 'https://dwmniez7.directus.app/items',\n\n            isFormManualUpload: true,\n            // getConfig\n            getConfig: {\n              url: '/blog',\n              requestReturn: {\n                data: value?.data?.map?.((i) => {\n                  return {\n                    ...i,\n                    photo: ASSETS + i?.photo,\n                    state: valueEnum[Math.floor(Math.random() * 10) % 4],\n                  };\n                }),\n                total: 10,\n              },\n            },\n            addConfig: {\n              params: {\n                status: 'published',\n                title: 'hello',\n                short_description: 'bg',\n                description: '<p>j</p>',\n                photo: '5c2a896e-b3f4-4098-9ddf-7cefda50905c',\n              },\n            },\n\n            // delete\n            deleteUrl: `/blog/${idField}`,\n\n            //edit\n            editUrl: `/blog/${idField}`,\n            editMethod: 'put',\n            editParam: {\n              ..._omit(value, 'record'),\n            },\n          };\n        }}\n        // manage actions (fixed at the right)\n        actions={{\n          // hideActionCol: true,\n          // isHideAdd: true,\n          // isHideEdit: true,\n          // add more action to dropdown 3 dot\n          moreOptMenu: (val) => {\n            return [\n              {\n                key: 'check',\n                name: 'check',\n                icon: <CheckCircleOutlined />,\n                onClick: () => {\n                  notification.info({\n                    message: 'action click',\n                    description: (\n                      <Typography.Paragraph code>\n                        {JSON.stringify(val)}\n                      </Typography.Paragraph>\n                    ),\n                  });\n\n                  console.log('moreOptMenu check', val);\n                },\n              },\n            ];\n          },\n        }}\n        // toolbar\n\n        moreToolBarRender={() => [\n          <Dropdown\n            key=\"menu\"\n            overlay={\n              <Menu\n                items={[\n                  {\n                    label: '1st item',\n                    key: '1',\n                  },\n                  {\n                    label: '2nd item',\n                    key: '2',\n                  },\n                  {\n                    label: '3rd item',\n                    key: '3',\n                  },\n                ]}\n              />\n            }\n          >\n            <Button>\n              <EllipsisOutlined />\n            </Button>\n          </Dropdown>,\n        ]}\n      />\n    </ConfigProvider>\n  );\n}",l="import { useRef } from 'react';\nimport { FormCrud } from 'next-dev-antd-ui/src';\nimport {\n  _isArray,\n  _omit,\n  _requestAxios,\n  _setConfigAxios,\n} from 'next-dev-utils/src';\nimport { ActionType, ProColumns } from '@ant-design/pro-components';\nimport { useForm } from 'antd/es/form/Form';\n\ninterface ResData {\n  meta: Meta;\n  data: Datum[];\n}\n\ninterface Datum {\n  id: number;\n  name: string;\n  email: string;\n  gender: string;\n  status: string;\n}\n\ninterface Meta {\n  pagination: Pagination;\n}\n\ninterface Pagination {\n  total: number;\n  pages: number;\n  page: number;\n  limit: number;\n  links: Links;\n}\n\ninterface Links {\n  previous?: any;\n  current: string;\n  next: string;\n}\n\ntype Filter = Pagination & Datum;\n\nexport default function DemoCrud() {\n  const [form] = useForm<Datum>();\n  const actionRef = useRef<ActionType>();\n\n  const columns: Array<\n    ProColumns<Datum> & { dataIndex?: keyof Datum; customRenderType?: 'tag' }\n  > = [\n    {\n      title: 'No',\n      valueType: 'index',\n      width: '10%',\n    },\n    {\n      width: '20%',\n      title: 'Name',\n      dataIndex: 'name',\n      formItemProps: {\n        rules: [{ required: true }],\n      },\n      hideInSearch: false,\n    },\n    {\n      width: 200,\n\n      title: 'Email',\n      dataIndex: 'email',\n      formItemProps: {\n        rules: [{ required: true }],\n      },\n    },\n    {\n      width: '15%',\n      title: 'Gender',\n      dataIndex: 'gender',\n      valueType: 'radioButton',\n      customRenderType: 'tag',\n      fieldProps: {\n        options: [\n          {\n            label: 'Male',\n            value: 'male',\n          },\n          {\n            label: 'Female',\n            value: 'female',\n          },\n        ],\n      },\n      formItemProps: {\n        rules: [{ required: true }],\n      },\n    },\n    {\n      width: '10%',\n      title: 'Status',\n      hideInSearch: false,\n      dataIndex: 'status',\n      valueType: 'select',\n      customRenderType: 'tag',\n      formItemProps: {\n        rules: [{ required: true }],\n      },\n      fieldProps: {\n        options: [\n          {\n            value: 'inactive',\n            label: 'Inactive',\n          },\n          {\n            value: 'active',\n            label: 'Active',\n          },\n        ],\n      },\n    },\n  ];\n  interface IPaginate {\n    paginate: Paginate;\n  }\n\n  interface Paginate {\n    params: Params;\n    filter: Filter;\n    sorter: Filter;\n  }\n\n  interface Filter {}\n\n  interface Params {\n    current: number;\n    pageSize: number;\n  }\n\n  return (\n    <FormCrud<Datum, Filter>\n      // manage form, setFieldsValue, resetFields ....\n      form={form}\n      // actionRef manage reload or refetch data, filter....\n      actionRef={actionRef}\n      // manage all column and render form, filter...\n      columns={columns}\n      // custom config, params, to _axios request\n      requestConfig={(value) => {\n        const newVal = value as typeof value & ResData & IPaginate;\n        console.log('requestConfig', newVal);\n\n        const idField = value?.id || value?.record?.id;\n\n        return {\n          //common\n          headers: {\n            Authorization:\n              'Bearer 0b4c0fa225e4e432de7e51fe13691e86e27ac12a360ca251bf714eeb00942325',\n          },\n          baseURL: 'https://gorest.co.in/public/v1',\n\n          // getConfig\n          getConfig: {\n            url: '/users',\n            requestReturn: {\n              data: newVal?.data,\n              success: true,\n              total: newVal?.meta?.pagination?.total,\n            },\n            params: {\n              limit: newVal?.paginate?.params?.pageSize,\n              page: newVal?.paginate?.params?.current,\n              ..._omit(newVal?.paginate?.params, 'pageSize', 'current'),\n            },\n          },\n          // add or create\n          addConfig: {\n            url: '/users',\n            params: {\n              email: value?.email,\n              gender: value?.gender,\n              name: value?.name,\n              status: value?.status,\n            },\n          },\n\n          // delete\n          deleteUrl: `/users/${idField}`,\n\n          //edit\n          editUrl: `/users/${idField}`,\n          editMethod: 'put',\n          editParam: {\n            ..._omit(value, 'record'),\n          },\n        };\n      }}\n    />\n  );\n}",s="/* eslint-disable react/no-unescaped-entities */\nexport default function Blog() {\n  return 'Coming soon';\n}",d="import { Fragment } from 'react';\nimport { Blog1 } from 'next-dev-ui/src';\nconst DemoButton = () => {\n  const renderComponent = [\n    {\n      title: 'Primary',\n      render: <Blog1 />,\n    },\n  ];\n\n  return (\n    <div className=\"flex flex-wrap items-center gap-4\">\n      {renderComponent.map((item, key) => (\n        <div key={key} className=\"w-80\">\n          {item.divider && <hr className=\"w-full border-b border-gray-200\" />}\n          {item.render}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DemoButton;",u='import { CodeOutlined, LeftOutlined, RightOutlined } from \'@ant-design/icons\';\nimport { showCodeMode } from \'@/helper\';\nimport { Fragment } from \'react\';\nimport { Button } from \'next-dev-ui/src\';\nimport { useHyperuiBtn } from \'./hyperui_btn\';\nimport { tailusButton } from \'./tailus\';\nimport { _selAppStoreAppState } from \'@/stores/app/selector\';\n\nconst DemoButton = () => {\n  const { setAppState } = _selAppStoreAppState();\n  const renderComponent = [\n    {\n      title: \'Primary\',\n      render: <Button title="Primary" />,\n    },\n    {\n      title: \'Primary Rounded\',\n      render: <Button title="rounded" shape="rounded" />,\n    },\n    {\n      title: \'Primary Disabled\',\n      render: <Button title="disabled" isDisabled />,\n    },\n    {\n      title: \'left Icon\',\n      render: <Button title="left Icon" leftIcon={<LeftOutlined />} />,\n    },\n    {\n      title: \'right Icon\',\n      render: <Button title="right Icon" rightIcon={<RightOutlined />} />,\n    },\n    {\n      title: \'Icon End\',\n      render: (\n        <Button\n          title="Icon End"\n          rightIcon={<RightOutlined className="absolute right-1.5" />}\n        />\n      ),\n    },\n    {\n      title: \'Outline Rounded\',\n      render: (\n        <Button variant="outline" title="Outline Rounded" shape="rounded" />\n      ),\n    },\n\n    {\n      title: \'Primary outline\',\n      render: <Button variant="outline" title="Outline" />,\n    },\n\n    {\n      title: \'link\',\n      render: <Button variant="link" title="link" />,\n    },\n    {\n      title: \'link\',\n      render: (\n        <Button\n          variant="link"\n          textTransform="uppercase"\n          title="link with icon"\n          rightIcon={<RightOutlined className="absolute right-1.5" />}\n        />\n      ),\n    },\n    {\n      title: \'outline Block\',\n      render: <Button variant="outline" title="Outline Block " isFull />,\n    },\n    {\n      title: \'success\',\n      divider: true,\n      render: <Button title="success" color="success" />,\n    },\n    {\n      title: \'dark\',\n      render: <Button title="dark" color="dark" />,\n    },\n    {\n      title: \'light\',\n      render: <Button title="light" color="light" />,\n    },\n    ...useHyperuiBtn(),\n    ...tailusButton(),\n  ];\n  // const [se,]= useModal()\n\n  return (\n    <div className="flex flex-wrap items-center gap-4">\n      {renderComponent.map((item, key) => (\n        <Fragment key={key}>\n          {item.divider && (\n            <>\n              <div className="w-full capitalize">{item.title}</div>\n              <hr className="w-full border-b border-gray-200" />\n            </>\n          )}\n\n          {item.render}\n          <div\n            className="relative flex items-center gap-1 text-gray-500 cursor-pointer right-3 bottom-3 hover:text-pink-500"\n            onClick={() => {\n              // @ts-ignore\n              setAppState({\n                toolBox: true,\n                toolboxContent: {\n                  content: item.render,\n                  title: item.title,\n                  width: 768,\n                },\n              });\n            }}\n          >\n            <CodeOutlined className="text-pink-600" />\n            code\n          </div>\n        </Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default DemoButton;',m="import { CodeOutlined, EyeOutlined } from '@ant-design/icons';\nimport { ProCard } from '@ant-design/pro-components';\nimport { Button, Collapse, Space, Typography } from 'antd';\nimport { Fragment } from 'react';\nimport { hyperuiFooter } from './hyperui';\n\nconst DemoButton = () => {\n  const { toggleToolbox, setAppState } = $sel._selAppStoreAppState();\n\n  return hyperuiFooter.map((item, key) => {\n    return (\n      <Fragment key={key}>\n        <ProCard\n          headerBordered\n          bordered\n          bodyStyle={{ padding: 0 }}\n          title={<Typography.Text strong>{item.title}</Typography.Text>}\n          extra={\n            <Space\n              onClick={() => {\n                // @ts-ignore\n                toggleToolbox();\n                // @ts-ignore\n                setAppState({\n                  toolboxContent: {\n                    content: item.render,\n                    title: item.title,\n                  },\n                });\n              }}\n            >\n              <EyeOutlined className=\"text-2xl text-pink-600 cursor-pointer\" />\n            </Space>\n          }\n          key={key}\n        >\n          <iframe\n            className=\"bg-white w-full h-[400px] lg:transition-all lg:h-[600px] \"\n            loading=\"lazy\"\n            srcDoc={$helper.source(item.render)}\n          ></iframe>\n        </ProCard>\n        <div className=\"h-7\" />\n      </Fragment>\n    );\n  });\n};\n\nexport default DemoButton;",c="import { CodeOutlined } from '@ant-design/icons';\nimport { Button, Collapse, Space, Typography } from 'antd';\nimport { Fragment } from 'react';\nimport { hyperNavUi } from './hyperui';\nimport { KometaNav } from './kometa';\nimport { TailBlocksNav } from './tailblocks';\n\nconst DemoButton = () => {\n  const { toggleToolbox, setAppState } = $sel._selAppStoreAppState();\n  const renderComponent: {\n    title: string;\n    link: string;\n    item: any[];\n  }[] = [\n    {\n      title: 'Tail Blocks & flowrift',\n      link: '',\n      item: TailBlocksNav,\n    },\n    {\n      title: 'Kometa & tailwind-kit Navs',\n      link: '',\n      item: KometaNav,\n    },\n\n    {\n      title: 'Hyper Nav UI',\n      link: '',\n      item: hyperNavUi,\n    },\n  ];\n\n  return (\n    <Collapse accordion defaultActiveKey=\"1\">\n      {renderComponent.map((menuItem, key) => {\n        return (\n          <Collapse.Panel\n            header={<Button type=\"link\">{menuItem.title}</Button>}\n            key={String(key + 1)}\n            extra={\n              <Space>\n                <Button type=\"link\" target={'_blank'} href={menuItem.link}>\n                  Credit: {menuItem.title}\n                </Button>\n              </Space>\n            }\n          >\n            <div className=\"space-x-4 space-y-6\">\n              {menuItem.item.map((item, key) => (\n                <Fragment key={String(key)}>\n                  {/* {item.divider && (\n      <>\n        <a\n          className=\"w-full font-bold capitalize\"\n          href={item?.link ?? '#'}\n          target={item?.link ? '_blank' : '_parent'}\n          rel=\"noreferrer\"\n        >\n          {item.sectionTitle}\n        </a>\n        <hr className=\"w-full border-b border-gray-200\" />\n      </>\n    )} */}\n\n                  {item.render}\n                  <div\n                    className=\"relative flex items-center gap-1 mt-2 text-gray-500 cursor-pointer right-3 bottom-3 hover:text-pink-500\"\n                    onClick={() => {\n                      // @ts-ignore\n                      toggleToolbox();\n                      // @ts-ignore\n                      setAppState({\n                        toolboxContent: {\n                          content: item.render,\n                          title: item.title,\n                        },\n                      });\n                    }}\n                  >\n                    <CodeOutlined className=\"text-pink-600\" />\n                    View: <Typography.Text strong>{item.title}</Typography.Text>\n                  </div>\n                  <hr className=\"w-full border-b border-gray-200\" />\n                </Fragment>\n              ))}\n            </div>\n          </Collapse.Panel>\n        );\n      })}\n    </Collapse>\n  );\n};\n\nexport default DemoButton;",p="import { useState } from 'react';\nimport { _regexEmail, _regexPassword } from 'next-dev-utils/src';\nimport { Button, Space } from 'antd';\nimport { ProForm, ProCard } from '@ant-design/pro-components';\nimport UserList from './user';\n\nexport default function Demo() {\n  return (\n    <>\n      <UserList />\n    </>\n  );\n}",g="import { ProCard, StatisticCard } from '@ant-design/pro-components';\nimport { Col, Divider, Row, Space, Typography } from 'antd';\nimport {\n  _requestAxios,\n  _setConfigAxios,\n  _initConfigAxios,\n  _requestPost,\n} from 'next-dev-utils/src';\nimport { useRequest } from 'ahooks';\nimport { ReloadOutlined } from '@ant-design/icons';\n\nconst UserList = () => {\n  _setConfigAxios({\n    baseURL: 'https://gorest.co.in/public/v1',\n  });\n\n  const { data, loading, refresh } = useRequest(\n    async () => (await _requestAxios<IBlog>('/users'))?.data,\n  );\n\n  return (\n    <ProCard\n      size=\"small\"\n      bordered\n      headerBordered\n      title=\"Demo Request Axios Utils\"\n      loading={loading}\n      extra={\n        <Space>\n          <Typography.Text>\n            Totals Users: {data?.meta?.pagination?.total}\n          </Typography.Text>\n          <div\n            className=\"px-2 py-1 rounded-lg cursor-pointer bg-gray-50\"\n            onClick={refresh}\n          >\n            <ReloadOutlined className=\"text-lg text-blue-500\" />\n          </div>\n        </Space>\n      }\n    >\n      <Row>\n        {data?.data?.map((i, k) => {\n          return (\n            <Col span={6} key={k}>\n              <StatisticCard\n                statistic={{\n                  title: i?.name,\n                  description: i?.email,\n                  valueRender: () => <Divider style={{ margin: '10px 0' }} />,\n                }}\n              />\n            </Col>\n          );\n        })}\n      </Row>\n    </ProCard>\n  );\n};\n\nexport default UserList;",h="import { useState } from 'react';\nimport { _regexEmail, _regexPassword } from 'next-dev-utils/src';\nimport { Button, Space } from 'antd';\nimport {\n  ProFormText,\n  ProForm,\n  ProCard,\n  ProFormSelect,\n} from '@ant-design/pro-components';\n\nexport default function Demo() {\n  const [form] = ProForm.useForm();\n\n  return (\n    <>\n      <ProCard bordered headerBordered title=\"Demo Regex\">\n        <ProForm form={form}>\n          <ProForm.Group>\n            <ProFormText\n              label=\"Validate\"\n              hasFeedback\n              placeholder=\"eg. abc@gmail.com\"\n              name=\"email\"\n              rules={[\n                {\n                  required: true,\n                },\n                {\n                  pattern: _regexPassword.atLeastTwoNumber,\n                  message: 'invalid Email',\n                },\n              ]}\n            />\n          </ProForm.Group>\n        </ProForm>\n      </ProCard>\n    </>\n  );\n}",f={"button-demo":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,6088))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:i}},dependencies:{},identifier:"button-demo"}},"crud-advancecrud":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,79626))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:a}},dependencies:{},identifier:"crud-advancecrud"}},"crud-basiccrud":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,61665))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:l}},dependencies:{},identifier:"crud-basiccrud"}},"blog-blog":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,47673))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:s}},dependencies:{},identifier:"blog-blog"}},"blog-demo":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,88603))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:d}},dependencies:{"next-dev-ui":{version:"0.0.0"},"@ant-design/icons":{version:">=4"},ahooks:{version:"=>3"}},identifier:"blog-demo"}},"button-demo-1":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,87623))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:u}},dependencies:{},identifier:"button-demo-1"}},"footer-demo":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,85993))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:m}},dependencies:{},identifier:"footer-demo"}},"top-demo":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,19454))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:c}},dependencies:{},identifier:"top-demo"}},"async-demo":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,27477))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:p},"user/index.tsx":{import:"./user",content:g}},dependencies:{"@ant-design/icons":{version:"4.7.0"},"@ant-design/pro-components":{version:"2.3.33"},antd:{version:">=4.20.0"},"next-dev-utils":{version:"1.0.11-rc4"},ahooks:{version:"3.7.2"},react:{version:"^16.8.0 || ^17.0.0 || ^18.0.0"},"react-dom":{version:">=16.9.0"},"tailwind-merge":{version:"^1.7.0"},"lodash-es":{version:"^4.17.21"},"lorem-ipsum":{version:"^2.0.8"},store:{version:"^2.0.12"},"crypto-js":{version:"^4.1.1"},jsencrypt:{version:"^3.3.0"},"@umijs/fabric":{version:"^3.0.0"},axios:{version:"^1.1.3"}},identifier:"async-demo"}},"is-demo":{component:(0,r.dynamic)({loader:async function(){var e=t(23519).default,n=await Promise.all([t.e(853),t.e(878)]).then(t.bind(t,89878)),o=e(await Promise.resolve().then(t.t.bind(t,96832,19))),r=function(){return o["default"].createElement(o["default"].Fragment,null,String(n._isSsr))};return r},loading:()=>null}),previewerProps:{sources:{_:{tsx:"import { _isSsr } from 'next-dev-utils/src';\nimport React from 'react';\n\nexport default () => {\n  return <>{String(_isSsr)}</>;\n};"}},dependencies:{},identifier:"is-demo"}},"is-demo-1":{component:(0,r.dynamic)({loader:async function(){var e=t(23519).default,n=e(await Promise.resolve().then(t.t.bind(t,96832,19))),o=await Promise.all([t.e(853),t.e(878)]).then(t.bind(t,89878)),r=function(){return n["default"].createElement(n["default"].Fragment,null,String((0,o._isMobile)()))};return r},loading:()=>null}),previewerProps:{sources:{_:{tsx:"import React from 'react';\nimport { _isMobile } from 'next-dev-utils/src';\n\nexport default () => {\n  return <>{String(_isMobile())}</>;\n};"}},dependencies:{},identifier:"is-demo-1"}},"validation-demo":{component:(0,r.dynamic)({loader:async()=>(await Promise.all([t.e(487),t.e(853),t.e(156),t.e(878),t.e(50)]).then(t.bind(t,31177))).default,loading:()=>null}),previewerProps:{sources:{_:{tsx:h}},dependencies:{"next-dev-utils":{version:"1.0.11-rc4"},"@ant-design/pro-components":{version:"2.3.33"},"tailwind-merge":{version:"^1.7.0"},"lodash-es":{version:"^4.17.21"},"lorem-ipsum":{version:"^2.0.8"},store:{version:"^2.0.12"},"crypto-js":{version:"^4.1.1"},jsencrypt:{version:"^3.3.0"},"@umijs/fabric":{version:"^3.0.0"},axios:{version:"^1.1.3"},antd:{version:">=4.20.0"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},identifier:"validation-demo"}}},v={},y=t(5509),x=t(58138),b=e=>(0,x.jsx)(y.Z,{...e,config:o,demos:f,apis:v})},30833:function(e,n,t){"use strict";t.r(n);const o={blogCmsApiUrl:"http://128.199.182.80:8055/items",blogCmsAssetsUrl:"http://128.199.182.80:8055/assets/",isNodeProd:!0,isNodeDev:!1},r=768,i=1024,a=1280,l={responsiveOption:[{label:"IP 12 pro",value:390},{label:"SM",value:640},{label:"MD",value:r},{label:"LG",value:i},{label:"XL",value:a},{label:"2XL",value:1536},{label:"FULL",value:"100%"}],mdWidth:r,lgWidth:i,xlWidth:a};n["default"]={...o,layout:l}},97841:function(e,n,t){"use strict";t.d(n,{G_:function(){return u},qz:function(){return m}});var o=t(81544),r=t.n(o),i=t(30107),a=t(70886),l=(t(25769),t(43815),t(24158),t(1751),t(62414),t(72334)),s=t(58138),d=t(30833)["default"];t(47107);const u=({children:e})=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("link",{href:"https://fonts.googleapis.com/css?family=Fira+Mono",rel:"stylesheet"}),(0,s.jsx)(r(),{disabled:!0,value:"string"===typeof e?e:(0,i.ZP)(e).replace("{`<","<").replace("`}","").replace(">;",">").replace(">`}",">"),highlight:e=>(0,a.highlight)(e,a.languages.jsx,"jsx"),padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:13}})]});function m(e,n="relative"){return`\n\n    <link rel="stylesheet" href="${d.isNodeDev?origin:origin+"/next-dev"}/tailwind-prod.css">\n\n    <body class="${n}">\n      ${(0,l.renderToStaticMarkup)(e)}\n    </body>\n  `}},1065:function(e,n,t){"use strict";t.d(n,{P:function(){return l}});var o=t(76713);const r=()=>(0,o.I0)(),i=o.v9;function a(e){const n=r();return e(n)}const l=()=>{const e=i((e=>e.appStore.appState)),n=a((e=>({setAppState:e.appStore.setAppState,toggleToolbox:e.appStore.toggleToolbox})));return{...e,appState:e,...n}}},52661:function(e,n,t){"use strict";t.r(n);var o=t(1065);n["default"]={_selAppStoreAppState:o.P}}}]);